<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<!-- Import dependency management from Spring Boot -->
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.1</version>
		<!-- http://stackoverflow.com/questions/6003831/parent-relativepath-points-at-my-com-mycompanymyproject-instead-of-org-apache -->
		<relativePath />
	</parent>

	<groupId>io.github.solven-eu.holymolap</groupId>
	<version>1.0-SNAPSHOT</version>

	<artifactId>monolith</artifactId>
	<packaging>jar</packaging>

	<inceptionYear>2022</inceptionYear>

	<properties>
		<!-- set encoding to something not platform dependent -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>

		<pepper.version>4.2</pepper.version>
		<jmh.version>1.21</jmh.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>io.github.solven-eu.pepper</groupId>
			<artifactId>pepper</artifactId>
			<version>${pepper.version}</version>
		</dependency>
		<dependency>
			<groupId>io.github.solven-eu.pepper</groupId>
			<artifactId>pepper-with-agent</artifactId>
			<version>${pepper.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.arrow/arrow-vector -->
		<dependency>
			<groupId>org.apache.arrow</groupId>
			<artifactId>arrow-dataset</artifactId>
			<version>10.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.arrow</groupId>
			<artifactId>arrow-memory-netty</artifactId>
			<version>10.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.roaringbitmap</groupId>
			<artifactId>RoaringBitmap</artifactId>
			<version>0.9.30</version>
		</dependency>
		<dependency>
			<groupId>me.lemire.integercompression</groupId>
			<artifactId>JavaFastPFOR</artifactId>
			<version>0.1.12</version>
		</dependency>

		<dependency>
			<groupId>it.unimi.dsi</groupId>
			<artifactId>fastutil</artifactId>
			<version>8.5.8</version>
		</dependency>

		<dependency>
			<groupId>io.deephaven</groupId>
			<artifactId>deephaven-csv</artifactId>
			<version>0.8.0</version>
		</dependency>
		<!-- Optional dependency for faster double parsing (Java 11+ compatible) -->
		<dependency>
			<groupId>io.deephaven</groupId>
			<artifactId>deephaven-csv-fast-double-parser</artifactId>
			<version>0.8.0</version>
		</dependency>
		<dependency>
			<groupId>ch.randelshofer</groupId>
			<artifactId>fastdoubleparser</artifactId>
			<!-- Before 0.5.0: https://github.com/deephaven/deephaven-csv/pull/75 -->
			<version>0.3.0</version>
		</dependency>

		<dependency>
			<groupId>com.esotericsoftware</groupId>
			<artifactId>kryo</artifactId>
			<version>5.3.0</version>
		</dependency>
		<dependency>
			<groupId>de.javakaffee</groupId>
			<artifactId>kryo-serializers</artifactId>
			<version>0.45</version>
		</dependency>

		<dependency>
			<groupId>org.apache.calcite.avatica</groupId>
			<artifactId>avatica-core</artifactId>
			<version>1.22.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.calcite</groupId>
			<artifactId>calcite-core</artifactId>
			<version>1.32.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.calcite</groupId>
			<artifactId>calcite-file</artifactId>
			<version>1.32.0</version>
		</dependency>

		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-core</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

<!-- https://www.arm64.ca/post/reading-parquet-files-java/ -->
		<!--dependency>
			<groupId>io.github.solven-eu.pepper</groupId>
			<artifactId>pepper-parquet</artifactId>
			<version>${pepper.version}</version>
		</dependency-->
		<dependency>
			<groupId>org.apache.parquet</groupId>
			<artifactId>parquet-avro</artifactId>
			<version>1.12.3</version>
		</dependency>
    <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-common</artifactId>
        <version>3.1.0</version>
        <exclusions>
        	<exclusion>
        		<groupId>org.slf4j</groupId>
        		<artifactId>slf4j-reload4j</artifactId>
        	</exclusion>
        </exclusions>
    </dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.quickperf</groupId>
			<artifactId>quick-perf-junit4-spring5</artifactId>
			<version>1.1.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.openjdk.jmh</groupId>
			<artifactId>jmh-core</artifactId>
			<version>${jmh.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.openjdk.jmh</groupId>
			<artifactId>jmh-generator-annprocess</artifactId>
			<version>${jmh.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>